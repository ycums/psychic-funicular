<Window x:Class="Pg01.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:vm="clr-namespace:Pg01.ViewModels"
        xmlns:behaviors="clr-namespace:Pg01.Behaviors"
        SizeToContent="WidthAndHeight"
        MinHeight="200" MinWidth="200"
        Left="{Binding X, Mode=TwoWay}" Top="{Binding Y, Mode=TwoWay}"
        Width="{Binding Width, Mode=OneWayToSource}" Height="{Binding Height, Mode=OneWayToSource}"
        Title="Pg01">
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <i:Interaction.Behaviors>
        <behaviors:KeyboardHookBehavior Event="{Binding Event, Mode=OneWayToSource}" />
    </i:Interaction.Behaviors>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Info">
            <l:InformationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="WindowAction" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <StackPanel>
            <TextBlock Text="{Binding Title}" />
            <TextBlock Text="{Binding ApplicationGroupName}" />
            <Button Content="開く(_O)" IsEnabled="{Binding OpenCommand.CanExecute}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <l:OpenFileDialogInteractionMessageAction>
                            <l:DirectInteractionMessage CallbackCommand="{Binding OpenCommand}">
                                <l:OpeningFileSelectionMessage Filter="設定ファイル(*.xml)|*.xml" Title="ファイルを開く"
                                                               MultiSelect="False" />
                            </l:DirectInteractionMessage>
                        </l:OpenFileDialogInteractionMessageAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Content="保存 (_S)" IsEnabled="{Binding SaveCommand.CanExecute}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <l:SaveFileDialogInteractionMessageAction>
                            <l:DirectInteractionMessage CallbackCommand="{Binding SaveCommand}">
                                <l:SavingFileSelectionMessage Filter="設定ファイル(*.xml)|*.xml" Title="ファイルを開く" />
                            </l:DirectInteractionMessage>
                        </l:SaveFileDialogInteractionMessageAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <ItemsControl MinHeight="20" ItemsSource="{Binding Buttons}" Height="{Binding ButtonsContainerHeight}"
                          Width="{Binding ButtonsContainerWidth}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding X}" />
                        <Setter Property="Canvas.Top" Value="{Binding Y}" />
                        <Setter Property="Height" Value="{Binding Height}" />
                        <Setter Property="Width" Value="{Binding Width}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding LabelText}"
                                IsEnabled="{Binding Enabled}"
                                Background="{Binding Background}" 
                                Command="{Binding ButtonComand}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Button Content="閉じる (_C)" Command="{Binding CloseCommand}" />
        </StackPanel>
    </Grid>
</Window>